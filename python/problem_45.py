def problem_definition():
    return '''Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
                        Triangle 	  	T(n) = n(n+1)/2 	1, 3, 6,  10, 15, ...
                        Pentagonal 	  	P(n) = n(3n−1)/2   	1, 5, 12, 22, 35, ...
                        Hexagonal 	  	H(n) = n(2n−1) 	 	1, 6, 15, 28, 45, ...

    It can be verified that T(285) = P(165) = H(143) = 40755.
    Find the next triangle number that is also pentagonal and hexagonal.'''


def t(n):
    # return n * (n + 1) // 2
    return (n * (n + 1)) >> 1


def p(n):
    # return n * (3 * n - 1) // 2
    return (n * (3 * n - 1)) >> 1


def h(n):
    # return n * (2 * n - 1)
    return n * ((n << 1) - 1)


done = False

triangle = 286 - 1
pentagonal = 166
hexagonal = 144

print('Searching...')
while not done:
    triangle += 1
    tvalue = t(triangle)

    while p(pentagonal) < tvalue:
        pentagonal += 1
    if p(pentagonal) > tvalue:
        pentagonal -= 1  # We went too far, go one step backward
        continue

    while h(hexagonal) < tvalue:
        hexagonal += 1
    if h(hexagonal) > tvalue:
        hexagonal -= 1  # We went too far, go one step backward
        continue

    print('t({}) = p({}) = h({}) = {}'.format(triangle, pentagonal, hexagonal, t(triangle)))
    # done = True

print('Done.')