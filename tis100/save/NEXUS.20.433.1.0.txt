@0
MOV 2 ANY
JRO ANY
MOV 3 ANY
JRO ANY
MOV 5 ANY
JRO ANY
MOV 7 ANY
JRO ANY
MOV 11 ANY
JRO ANY
MOV 13 ANY
JRO ANY
MOV 17 ANY
JRO ANY
MOV 0 ANY

@1
ST: MOV UP ACC
LP: SAV
    MOV LEFT ACC
    JEZ EG
    MOV ACC RIGHT
    SWP
    MOV ACC RIGHT
    JRO DOWN
    MOV 1 ACC
    ADD DOWN # Q
    JMP LP
    JMP ST # DELAY
EG: SWP
    MOV 0 RIGHT
    MOV ACC RIGHT

@2
# <-DECIDES WHAT 2
# <-DO WITH PRIMES
# BYPASS R PROVIDE
ST: MOV LEFT ACC
    JNZ OK
EG: MOV 10 DOWN
    MOV LEFT DOWN
    JMP ST
OK: MOV 1 DOWN
    MOV ACC DOWN
    MOV LEFT DOWN

@3
# ^ GIVES PRIMES ^
# CONTROLS WHAT ->
# TO DO NEXT    ->
# BACK?NEXT?RESET?
ST: JRO RIGHT
OK: MOV -1 UP
    MOV UP DOWN
    MOV -1 UP
    JMP ST
NX: MOV 1 UP
    JMP ST
LP: MOV -1 UP
    MOV UP DOWN
    MOV -999 UP
    MOV 0 DOWN

@4
ST: MOV -1 ACC
    ADD RIGHT # R
    JEZ OK
NX: MOV RIGHT NIL
    MOV +5 LEFT
    MOV -6 UP
    JMP ST
OK: MOV RIGHT ACC
    JEZ FL
O2: MOV +1 LEFT
    MOV +1 UP
    MOV ACC UP
    JMP ST
FL: MOV +7 LEFT
    MOV +4 UP

@5
# BYPASS OR DIVIDE
# PROVIDE R+1, Q-1
S:JRO UP
  MOV UP ACC # ?/D
  MOV UP RIGHT
  JMP L
  MOV ACC RIGHT
L:JRO RIGHT
  ADD RIGHT
  MOV ACC LEFT#R+1
  MOV RIGHT LEFT#Q
  JMP S
  MOV UP DOWN

@6
# SUB/D UNTIL DONE
# THEN PROVIDE Q-1
MOV 1 ACC # N/?
ADD LEFT
LP: MOV -1 DOWN
    MOV -1 LEFT
    SUB LEFT
    JGZ LP
MOV 1 LEFT
MOV ACC LEFT
MOV 1 DOWN
MOV DOWN LEFT #Q-1

@7
## EEKY EDGE CASEY
# THIS JUST GIVES
MOV UP ACC
MOV 1 RIGHT
MOV ACC RIGHT

@8
# SIMPLE MOVE FROM
# LEFT OR EDGECASE
#
# WITHOUT EDGECASE
# WE WOULDN'T NEED
# EEKYBYPASS LOGIC
ST: JRO ANY
OK: MOV LEFT DOWN
    JMP ST
EG: MOV RIGHT DOWN
    MOV 0 DOWN

@9
# THIS JUST GIVES
MOV UP ACC
MOV 3 LEFT
MOV ACC LEFT

@10
# THIS JUST COUNTS
MOV -3 ACC
ADD 1
JRO UP
MOV ACC UP #Q-1